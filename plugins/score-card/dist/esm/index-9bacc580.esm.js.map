{"version":3,"file":"index-9bacc580.esm.js","sources":["../../src/api/types.ts","../../src/api/ScoringDataApi.ts","../../src/api/ScoringDataJsonClient.ts","../../src/routes.ts","../../src/helpers/nameToColorCombinationConverter.ts","../../src/helpers/scoreToColorConverter.ts","../../src/helpers/getWarningPanel.tsx","../../src/components/ScoreCardTable/ScoreCardTable.tsx","../../src/plugin.ts"],"sourcesContent":["/*\n * Copyright 2022 Oriflame\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { CompoundEntityRef } from '@backstage/catalog-model';\n\nexport enum ScoreSuccessEnum {\n  Success = 'success',\n  AlmostSuccess = 'almost-success',\n  Partial = 'partial',\n  AlmostFailure = 'almost-failure',\n  Failure = 'failure',\n}\n\nexport interface EntityScore {\n  entityRef: CompoundEntityRef;\n  generatedDateTimeUtc: Date | string;\n  scorePercent: number;\n  scoreLabel?: string;\n  scoreSuccess: ScoreSuccessEnum;\n  scoringReviewer: string | CompoundEntityRef | undefined | null;\n  scoringReviewDate: Date | string | undefined | null;\n  areaScores: EntityScoreArea[];\n}\n\nexport interface EntityScoreArea {\n  id: number;\n  title: string;\n  scorePercent: number;\n  scoreLabel?: string;\n  scoreSuccess: ScoreSuccessEnum;\n  scoreEntries: EntityScoreEntry[];\n}\n\nexport interface EntityScoreEntry {\n  id: number;\n  title: string;\n  titleLabel?: string;\n  titleLabelColor?: string;\n  isOptional: boolean;\n  scorePercent: number;\n  scoreLabel?: string;\n  scoreSuccess: ScoreSuccessEnum;\n  scoreHints: string | string[];\n  details: string;\n  extraDetails?: string;\n  extraDetailsColor?: string;\n}\n\nexport interface EntityScoreExtended extends EntityScore {\n  owner: CompoundEntityRef | undefined;\n  reviewer: CompoundEntityRef | undefined;\n  reviewDate: Date | undefined;\n}\n","/*\n * Copyright 2022 Oriflame\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { Entity } from '@backstage/catalog-model';\nimport { createApiRef } from '@backstage/core-plugin-api';\nimport { EntityScoreExtended } from './types';\n\nexport const scoringDataApiRef = createApiRef<ScoringDataApi>({\n  id: 'plugin.scoringdata.service',\n});\n\nexport type ScoringDataApi = {\n  getScore(entity?: Entity): Promise<EntityScoreExtended | undefined>;\n  getAllScores(entityKindFilter?: string[]): Promise<EntityScoreExtended[] | undefined>;\n};\n","/*\n * Copyright 2022 Oriflame\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { ScoringDataApi } from './ScoringDataApi';\nimport { ConfigApi, FetchApi } from '@backstage/core-plugin-api';\nimport { EntityScore, EntityScoreExtended } from './types';\nimport { CatalogApi } from '@backstage/plugin-catalog-react';\nimport {\n  Entity,\n  CompoundEntityRef,\n  parseEntityRef,\n  RELATION_OWNED_BY,\n} from '@backstage/catalog-model';\n\n/**\n * Default JSON data client. Expects JSON files in a format see /sample-data\n */\nexport class ScoringDataJsonClient implements ScoringDataApi {\n  configApi: ConfigApi;\n  catalogApi: CatalogApi;\n  fetchApi: FetchApi;\n\n  constructor({\n    configApi,\n    catalogApi,\n    fetchApi,\n  }: {\n    configApi: ConfigApi;\n    catalogApi: CatalogApi;\n    fetchApi: FetchApi;\n  }) {\n    this.configApi = configApi;\n    this.catalogApi = catalogApi;\n    this.fetchApi = fetchApi;\n  }\n\n  public async getScore(\n    entity?: Entity,\n  ): Promise<EntityScoreExtended | undefined> {\n    if (!entity) {\n      return undefined;\n    }\n\n    const jsonDataUrl = this.getJsonDataUrl();\n    const urlWithData = `${jsonDataUrl}${entity.metadata.namespace}/${entity.kind}/${entity.metadata.name}.json`.toLowerCase();\n\n    const result: EntityScore = await fetch(urlWithData).then(res => {\n      switch (res.status) {\n        case 404:\n          return null;\n        case 200:\n          return res.json();\n        default:\n          throw new Error(`error from server (code ${res.status})`);\n      }\n    });\n    if (!result) {\n      return undefined;\n    }\n    return this.extendEntityScore(result, undefined);\n  }\n\n  public async getAllScores(entityKindFilter?: string[]): Promise<EntityScoreExtended[] | undefined> {\n    const jsonDataUrl = this.getJsonDataUrl();\n    const urlWithData = `${jsonDataUrl}all.json`;\n    let result: EntityScore[] | undefined = await fetch(urlWithData).then(\n      res => {\n        switch (res.status) {\n          case 404:\n            return undefined;\n          case 200:\n            return res.json();\n          default:\n            throw new Error(`error from server (code ${res.status})`);\n        }\n      },\n    );\n    if (!result) return undefined;\n\n    // Filter entities by kind\n    if (entityKindFilter && entityKindFilter.length) {\n      result = result.filter(entity => entityKindFilter.map(f => f.toLocaleLowerCase()).includes(entity.entityRef?.kind.toLowerCase() as string));\n    }\n\n    const entity_names: Set<string> = result.reduce((acc, a) => {\n      if (a.entityRef?.name) {\n        acc.add(a.entityRef.name);\n      }\n      return acc;\n    }, new Set<string>);\n    \n    const fetchAllEntities = this.configApi.getOptionalBoolean('scorecards.fetchAllEntities') ?? false\n        const response = await this.catalogApi.getEntities({\n      filter: fetchAllEntities ? (entityKindFilter ? {kind: entityKindFilter} : {}):  {\n        'metadata.name': Array.from(entity_names)\n       },\n      fields: ['kind', 'metadata.name', 'metadata.namespace', 'spec.owner', 'relations'],\n    });\n    const entities: Entity[] = fetchAllEntities\n      ? response.items.filter(i => entity_names.has(i.metadata.name))\n      : response.items;\n\n    return result.map<EntityScoreExtended>(score => {\n      return this.extendEntityScore(score, entities);\n    });\n  }\n\n  // ---- HELPER METHODS ---- //\n\n  private getJsonDataUrl() {\n    return (\n      this.configApi.getOptionalString('scorecards.jsonDataUrl') ??\n      'https://unknown-url-please-configure'\n    );\n  }\n\n  private extendEntityScore(\n    score: EntityScore,\n    entities: Entity[] | undefined,\n  ): EntityScoreExtended {\n    if (score === null) {\n      throw new Error(`can not extend null entity score.`);\n    }\n    if (typeof score === 'undefined') {\n      throw new Error(`can not extend undefined entity score.`);\n    }\n\n    const catalogEntity = entities\n      ? entities.find(entity => \n          entity.metadata.name === score.entityRef?.name \n          && (!score.entityRef?.kind || entity.kind.toLowerCase() === score.entityRef?.kind.toLowerCase())\n          && (!score.entityRef?.namespace || (entity.metadata.namespace || 'default').toLowerCase() == score.entityRef?.namespace.toLowerCase())\n      ) : undefined;\n\n    const owner = catalogEntity?.relations?.find(\n      r => r.type === RELATION_OWNED_BY,\n    )?.targetRef;\n\n    let reviewer: CompoundEntityRef | undefined = undefined;\n    if (score.scoringReviewer && !(score.scoringReviewer as CompoundEntityRef)?.name) {\n      reviewer = { name: score.scoringReviewer as string, kind: 'User', namespace: 'default' };\n    } else if ((score.scoringReviewer as CompoundEntityRef)?.name) {\n      const scoringReviewer = score.scoringReviewer as CompoundEntityRef\n      reviewer = { name: scoringReviewer.name, kind: scoringReviewer?.kind ?? \"User\", namespace: scoringReviewer?.namespace ?? 'default' };\n    }\n\n    const reviewDate = score.scoringReviewDate\n      ? new Date(score.scoringReviewDate)\n      : undefined;\n    return {\n      owner: owner ? parseEntityRef(owner) : undefined,\n      reviewer: reviewer,\n      reviewDate: reviewDate,\n      ...score,\n    };\n  }\n}\n","/*\n * Copyright 2022 Oriflame\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { createRouteRef } from '@backstage/core-plugin-api';\n\nexport const rootRouteRef = createRouteRef({\n  id: 'score-card',\n});\n","\n// Represents a combination of colors with a \"good\" reading contrast\nexport type ColorCombination = {\n  background: string\n  foreground: string\n}\n\nconst CUSTOM_COLOR_COMBINATION_CONFIG_REGEXP: RegExp = /^\\S+\\s+#[0-9a-f]{6,8}\\s+#[0-9a-f]{6,8}$/i\nconst CUSTOM_COLOR_COMBINATION_INLINE_REGEXP: RegExp = /^#[0-9a-f]{6,8}\\s+#[0-9a-f]{6,8}$/i\n\nconst defaultColorCombinations: { [name: string]: string[] } = {\n  // Extra details colors based on score\n  \"extra-details-failure\": [\"#5a0000\", \"#ff000022\"],\n  \"extra-details-almost-failure\": [\"#5a0000\", \"#ff000022\"],\n  \"extra-details-partial\": [\"#5a0000\", \"#ff000022\"],\n  \"extra-details-almost-success\": [\"#0f4a0f\", \"#72af5026\"],\n  \"extra-details-success\": [\"#0f4a0f\", \"#72af5026\"],\n  \"extra-details-unknown\": [\"#FFFFFF\", \"#001F3F\"],\n  // Score colors\n  // see palette https://coolors.co/72af50-acbf8c-e2e8b3-ffc055-eb6f35\n  \"score-success\": [\"rgba(0, 0, 0, 0.87)\", 'rgb(114, 175, 80)'],\n  \"score-almost-success\": [\"rgba(0, 0, 0, 0.87)\", 'rgb(172, 191, 140)'],\n  \"score-partial\": [\"rgba(0, 0, 0, 0.87)\", 'rgb(226, 232, 179)'],\n  \"score-almost-failure\": [\"rgba(0, 0, 0, 0.87)\", 'rgb(255, 192, 85)'],\n  \"score-failure\": [\"rgba(0, 0, 0, 0.87)\", 'rgb(235, 111, 53)'],\n  \"score-unknown\": [\"rgba(0, 0, 0, 0.87)\", 'rgb(158, 158, 158)'],\n  // Some colors used for labels and other things .. Thanks to ChatGPT  :)\n  \"white\": [\"#000000\", \"#FFFFFF\"],\n  \"snow\": [\"#FFFFFF\", \"#001F3F\"],\n  \"graphite\": [\"#555555\", \"#CCCCCC\"],\n  \"arctic\": [\"#34495E\", \"#ECF0F1\"],\n  \"steel-blue\": [\"#266294\", \"#B0C4DE\"],\n  \"emerald\": [\"#23894e\", \"#D0ECE7\"],\n  \"iceberg\": [\"#3c9366\", \"#DFF0E2\"],\n  \"sapphire\": [\"#3498DB\", \"#D5EAF8\"],\n  \"periwinkle\": [\"#8E44AD\", \"#D2B4DE\"],\n  \"lavender\": [\"#6A5ACD\", \"#dddded\"],\n  \"sky\": [\"#3498DB\", \"#c7e1f3\"],\n  \"azure\": [\"#0074D9\", \"#F0FFFF\"],\n  \"teal\": [\"#00877a\", \"#B2DFDB\"],\n  \"cerulean\": [\"#003366\", \"#00BFFF\"],\n  \"indigo\": [\"#4B0082\", \"#A9A9F5\"],\n  \"olive\": [\"#808000\", \"#DAF7A6\"],\n  \"royal\": [\"#88bcff\", \"#273746\"],\n  \"turquoise\": [\"#16A085\", \"#E8F8F5\"],\n  \"sage\": [\"#5F6A6A\", \"#A9DFBF\"],\n  \"seafoam\": [\"#4fa573\", \"#E0F8D8\"],\n  \"lilac\": [\"#aa71c1\", \"#F4ECF7\"],\n}\n\nimport { configApiRef, useApi } from '@backstage/core-plugin-api';\n\nlet cachedColorCombinations: { [name: string]: string[] } | undefined = undefined\n\n// Loads color combinations\nconst getColorCombinations = () => {\n  if (cachedColorCombinations) {\n    return cachedColorCombinations;\n  }\n\n  let colorCombinations = defaultColorCombinations;\n  const config = useApi(configApiRef);\n\n  const customCombinationsString = config.getOptionalString(\"scorecards.colorCombinations\");\n  if (customCombinationsString) {\n    console.debug(\"Custom color combinations loaded: %s\", customCombinationsString)\n    // Parsing the <color-name> <foreground> <background> format!\n    const customCombinations = customCombinationsString.split('\\n').reduce((map, line) => {\n      if (line.match(CUSTOM_COLOR_COMBINATION_CONFIG_REGEXP)) {\n        const configParts = line.split(/\\s+/);\n        map[configParts[0]] = [configParts[1], configParts[2]]\n      } else {\n        console.warn(\"Could not match scorecards.colorCombinations line [%s] with regexp [%s], which is the supported configuration format.. please follow it!\", line, CUSTOM_COLOR_COMBINATION_CONFIG_REGEXP);\n      }\n      return map;\n    }, {} as {[name: string]: string[]})\n\n    // Overriding with custom configs :)\n    colorCombinations = {\n      ...colorCombinations,\n      ...customCombinations\n    }\n  }\n\n  // We set cachedColorCombinations atomically just in case\n  cachedColorCombinations = colorCombinations\n  return cachedColorCombinations\n}\n\n\n// Converts a color name to a set of background/foreground color :)\nexport const nameToColorCombinationConverter = (\n  name: string | undefined,\n): ColorCombination => {\n  const colorCombinations = getColorCombinations();\n\n  // Find color combination from default color combinations\n  if (name && name in colorCombinations) {\n    return {\n      foreground: colorCombinations[name][0],\n      background: colorCombinations[name][1],\n    }\n  }\n\n  // User may provide own combination \n  // <foreground> <background>\n  // example: #aaaaaaa #cccccc\n  if (name?.match(CUSTOM_COLOR_COMBINATION_INLINE_REGEXP)) {\n    const parts = name.split(/\\s+/)\n    return {\n      foreground: parts[0],\n      background: parts[1]\n    }\n  }\n\n  // Default color \n  return nameToColorCombinationConverter('white')\n\n}","/*\n * Copyright 2022 Oriflame\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { ScoreSuccessEnum } from '../api';\nimport { ColorCombination, nameToColorCombinationConverter } from './nameToColorCombinationConverter';\n\nexport const scoreToColorConverter = (\n  scoreSuccess: ScoreSuccessEnum | undefined,\n): ColorCombination => {\n  if (typeof scoreSuccess === 'undefined') {\n    return nameToColorCombinationConverter(`score-unknown`);\n  }\n  switch (scoreSuccess) {\n    case ScoreSuccessEnum.Success:\n    case ScoreSuccessEnum.AlmostSuccess:\n    case ScoreSuccessEnum.Partial:\n    case ScoreSuccessEnum.AlmostFailure:\n    case ScoreSuccessEnum.Failure:\n      return nameToColorCombinationConverter(`score-${scoreSuccess}`);\n    default:\n      return nameToColorCombinationConverter(`score-unknown`);\n  }\n};\n","/*\n * Copyright 2022 Oriflame\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { ResponseErrorPanel } from '@backstage/core-components';\nimport React from 'react';\n\nexport const getWarningPanel = (error: Error) => {\n  return (\n    <ResponseErrorPanel\n      error={error}\n      title=\"Could not load data\"\n      defaultExpanded\n      key=\"error\"\n    />\n  );\n};\n","/*\n * Copyright 2022 Oriflame\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport React, { useEffect } from 'react';\nimport { Table, TableColumn, Progress, Link } from '@backstage/core-components';\nimport useAsync from 'react-use/lib/useAsync';\nimport { errorApiRef, useApi } from '@backstage/core-plugin-api';\nimport { scoreToColorConverter } from '../../helpers/scoreToColorConverter';\nimport { Chip } from '@material-ui/core';\nimport { getWarningPanel } from '../../helpers/getWarningPanel';\nimport { scoringDataApiRef } from '../../api';\nimport { EntityScoreExtended } from '../../api/types';\nimport { EntityRefLink } from '@backstage/plugin-catalog-react';\nimport { DEFAULT_NAMESPACE } from '@backstage/catalog-model';\n\nconst useScoringAllDataLoader = (entityKindFilter?: string[]) => {\n  const errorApi = useApi(errorApiRef);\n  const scorigDataApi = useApi(scoringDataApiRef);\n\n  const { error, value, loading } = useAsync(\n    async () => scorigDataApi.getAllScores(entityKindFilter),\n    [scorigDataApi],\n  );\n\n  useEffect(() => {\n    if (error) {\n      errorApi.post(error);\n    }\n  }, [error, errorApi]);\n\n  return { loading, value, error };\n};\n\ntype ScoreTableProps = {\n  title?: string;\n  scores: EntityScoreExtended[];\n};\n\nexport const ScoreTable = ({ title, scores }: ScoreTableProps) => {\n  const columns: TableColumn<EntityScoreExtended>[] = [\n    {\n      title: 'Name',\n      field: 'entityRef.name',\n      render: entityScore => {\n        if (!entityScore.entityRef?.name) {\n          return <>Missing entityRef.name key</>\n        }\n\n        return (<Link\n          to={`/catalog/${entityScore.entityRef.namespace ?? DEFAULT_NAMESPACE}/${entityScore.entityRef.kind}/${entityScore.entityRef.name}/score`}\n          data-id={entityScore.entityRef.name}\n          >\n            {entityScore.entityRef.name}\n          </Link>)\n      }\n    },\n    {\n      title: 'Kind',\n      field: 'entityRef.kind',\n      render: entityScore => {\n          return <>{entityScore.entityRef.kind}</>\n      }\n    },\n    {\n      title: 'Owner',\n      field: 'owner.name',\n      render: entityScore =>\n      entityScore.owner ? (\n          <>\n            <EntityRefLink entityRef={entityScore.owner}>\n              {entityScore.owner.name}\n            </EntityRefLink>\n          </>\n        ) : null,\n    },\n    {\n      title: 'Reviewer',\n      field: 'scoringReviewer',\n      render: entityScore =>\n        entityScore.reviewer ? (\n          <>\n            <EntityRefLink entityRef={entityScore.reviewer}>\n              {entityScore.reviewer?.name}\n            </EntityRefLink>\n          </>\n        ) : null,\n    },\n    {\n      title: 'Date',\n      field: 'scoringReviewDate',\n      render: entityScore =>\n        entityScore.reviewDate ? (\n          <>{entityScore.reviewDate.toLocaleDateString()}</>\n        ) : null,\n    },\n  ];\n  scores\n    .flatMap(s => {\n      return s.areaScores ?? [];\n    })\n    .reduce<string[]>((areas, area) => {\n      if (!area || !area.title || areas.findIndex(x => x === area.title) !== -1)\n        return areas;\n      areas.push(area.title);\n      columns.push({\n        title: area.title,\n        field: 'n/a',\n        customSort: (d1, d2) => {\n          const d1ScoreEntry = d1?.areaScores\n            ? d1.areaScores.find(a => a.title === area.title)?.scorePercent\n            : undefined;\n          const d2ScoreEntry = d2?.areaScores\n            ? d2.areaScores.find(a => a.title === area.title)?.scorePercent\n            : undefined;\n          if (!d1ScoreEntry || d1ScoreEntry < (d2ScoreEntry ?? 0)) return -1;\n          if (!d2ScoreEntry || d2ScoreEntry < d1ScoreEntry) return 1;\n          return 0;\n        },\n        render: entityScoreEntry => {\n          const currentScoreEntry = entityScoreEntry?.areaScores\n            ? entityScoreEntry.areaScores.find(a => a.title === area.title)\n            : undefined;\n          const chipStyle: React.CSSProperties = {\n            margin: 0,\n            backgroundColor: scoreToColorConverter(\n              currentScoreEntry?.scoreSuccess,\n            ).background,\n            color: scoreToColorConverter(\n              currentScoreEntry?.scoreSuccess,\n            ).foreground,\n            minWidth: '4rem',\n          };\n          const label = currentScoreEntry?.scoreLabel ?? `${currentScoreEntry?.scorePercent} %`;\n          return typeof currentScoreEntry?.scorePercent !== 'undefined' ? (\n            <Chip\n              label={label}\n              style={chipStyle}\n            />\n          ) : null;\n        },\n      });\n      return areas;\n    }, []);\n\n  columns.push({\n    title: 'Total',\n    align: 'right',\n    field: 'scorePercent',\n    render: entityScoreEntry => {\n      const chipStyle: React.CSSProperties = {\n        margin: 0,\n        backgroundColor: scoreToColorConverter(entityScoreEntry?.scoreSuccess).background,\n        color: scoreToColorConverter(entityScoreEntry?.scoreSuccess).foreground,\n        float: 'right',\n        minWidth: '4rem',\n      };\n      const label = entityScoreEntry?.scoreLabel ?? `${entityScoreEntry?.scorePercent} %`;\n      return typeof entityScoreEntry.scorePercent !== 'undefined' ? (\n        <Chip label={label} style={chipStyle} />\n      ) : null;\n    },\n  });\n\n  // in case we have less then 10 entities let's show at least 10 rows\n  const minDefaultPageSizeOption = scores.length >= 10 ? scores.length : 10;\n  // so in case we have less then 100 entities we want to see them all in one page after load\n  const maxDefaultPageSizeOption =\n    scores.length < 100 ? minDefaultPageSizeOption : 100;\n  // so now we are in a situation, when\n  // count(entities) | minDefaultPageSizeOption | maxDefaultPageSizeOption | defaultPageSizeOption\n  //   0 |  10 |  10 |  10\n  //   5 |  10 |  10 |  10\n  //  10 |  10 |  10 |  10\n  //  50 |  50 |  50 |  50\n  // 100 | 100 | 100 | 100\n  // 150 | 150 | 100 | 100\n  const defaultPageSizeOption =\n    minDefaultPageSizeOption > maxDefaultPageSizeOption\n      ? maxDefaultPageSizeOption\n      : minDefaultPageSizeOption;\n\n  return (\n    <div data-testid=\"score-board-table\">\n      <Table<EntityScoreExtended>\n        title={title ?? \"Entities scores overview\"}\n        options={{\n          search: true,\n          paging: true,\n          padding: 'dense',\n          pageSize: defaultPageSizeOption,\n          pageSizeOptions: [defaultPageSizeOption, 20, 50, 100, 200],\n        }}\n        columns={columns}\n        data={scores}\n      />\n    </div>\n  );\n};\n\ntype ScoreCardTableProps = {\n  title?: string;\n  entityKindFilter?: string[];\n};\nexport const ScoreCardTable = ({title, entityKindFilter}: ScoreCardTableProps) => {\n  const { loading, error, value: data } = useScoringAllDataLoader(entityKindFilter);\n\n  if (loading) {\n    return <Progress />;\n  } else if (error) {\n    return getWarningPanel(error);\n  }\n\n  return <ScoreTable title={title}  scores={data || []} />;\n};\n","/*\n * Copyright 2022 Oriflame\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport {\n  createPlugin,\n  createRoutableExtension,\n  createComponentExtension,\n  createApiFactory,\n  fetchApiRef,\n  configApiRef,\n} from '@backstage/core-plugin-api';\nimport { catalogApiRef } from '@backstage/plugin-catalog-react';\nimport { ScoringDataJsonClient } from './api';\nimport { scoringDataApiRef } from './api';\n\nimport { rootRouteRef } from './routes';\n\nexport { ScoreCardTable } from './components/ScoreCardTable';\n\nexport const scoreCardPlugin = createPlugin({\n  id: 'score-card',\n  routes: {\n    root: rootRouteRef,\n  },\n  apis: [\n    createApiFactory({\n      api: scoringDataApiRef,\n      deps: {\n        configApi: configApiRef,\n        catalogApi: catalogApiRef,\n        fetchApi: fetchApiRef,\n      },\n      factory: ({ configApi, catalogApi, fetchApi }) =>\n        new ScoringDataJsonClient({\n          configApi,\n          catalogApi,\n          fetchApi,\n        }),\n    }),\n  ],\n});\n\nexport const ScoreBoardPage = scoreCardPlugin.provide(\n  createRoutableExtension({\n    name: 'score-board-page',\n    component: () =>\n      import('./components/ScoreBoardPage').then(m => m.ScoreBoardPage),\n    mountPoint: rootRouteRef,\n  }),\n);\n\nexport const EntityScoreCardContent = scoreCardPlugin.provide(\n  createComponentExtension({\n    name: 'score-board-card',\n    component: {\n      lazy: () => import('./components/ScoreCard').then(m => m.ScoreCard),\n    },\n  }),\n);\n"],"names":["ScoreSuccessEnum","_a","_b","_c","_d","_e"],"mappings":";;;;;;;;AAiBY,IAAA,gBAAA,qBAAAA,iBAAL,KAAA;AACL,EAAAA,kBAAA,SAAU,CAAA,GAAA,SAAA,CAAA;AACV,EAAAA,kBAAA,eAAgB,CAAA,GAAA,gBAAA,CAAA;AAChB,EAAAA,kBAAA,SAAU,CAAA,GAAA,SAAA,CAAA;AACV,EAAAA,kBAAA,eAAgB,CAAA,GAAA,gBAAA,CAAA;AAChB,EAAAA,kBAAA,SAAU,CAAA,GAAA,SAAA,CAAA;AALA,EAAAA,OAAAA,iBAAAA,CAAAA;AAAA,CAAA,EAAA,gBAAA,IAAA,EAAA;;ACEL,MAAM,oBAAoB,YAA6B,CAAA;AAAA,EAC5D,EAAI,EAAA,4BAAA;AACN,CAAC;;ACQM,MAAM,qBAAgD,CAAA;AAAA,EAK3D,WAAY,CAAA;AAAA,IACV,SAAA;AAAA,IACA,UAAA;AAAA,IACA,QAAA;AAAA,GAKC,EAAA;AACD,IAAA,IAAA,CAAK,SAAY,GAAA,SAAA,CAAA;AACjB,IAAA,IAAA,CAAK,UAAa,GAAA,UAAA,CAAA;AAClB,IAAA,IAAA,CAAK,QAAW,GAAA,QAAA,CAAA;AAAA,GAClB;AAAA,EAEA,MAAa,SACX,MAC0C,EAAA;AAC1C,IAAA,IAAI,CAAC,MAAQ,EAAA;AACX,MAAO,OAAA,KAAA,CAAA,CAAA;AAAA,KACT;AAEA,IAAM,MAAA,WAAA,GAAc,KAAK,cAAe,EAAA,CAAA;AACxC,IAAM,MAAA,WAAA,GAAc,CAAG,EAAA,WAAA,CAAA,EAAc,MAAO,CAAA,QAAA,CAAS,SAAa,CAAA,CAAA,EAAA,MAAA,CAAO,IAAQ,CAAA,CAAA,EAAA,MAAA,CAAO,QAAS,CAAA,IAAA,CAAA,KAAA,CAAA,CAAY,WAAY,EAAA,CAAA;AAEzH,IAAA,MAAM,SAAsB,MAAM,KAAA,CAAM,WAAW,CAAA,CAAE,KAAK,CAAO,GAAA,KAAA;AAC/D,MAAA,QAAQ,IAAI,MAAQ;AAAA,QAClB,KAAK,GAAA;AACH,UAAO,OAAA,IAAA,CAAA;AAAA,QACT,KAAK,GAAA;AACH,UAAA,OAAO,IAAI,IAAK,EAAA,CAAA;AAAA,QAClB;AACE,UAAA,MAAM,IAAI,KAAA,CAAM,CAA2B,wBAAA,EAAA,GAAA,CAAI,MAAS,CAAA,CAAA,CAAA,CAAA,CAAA;AAAA,OAC5D;AAAA,KACD,CAAA,CAAA;AACD,IAAA,IAAI,CAAC,MAAQ,EAAA;AACX,MAAO,OAAA,KAAA,CAAA,CAAA;AAAA,KACT;AACA,IAAO,OAAA,IAAA,CAAK,iBAAkB,CAAA,MAAA,EAAQ,KAAS,CAAA,CAAA,CAAA;AAAA,GACjD;AAAA,EAEA,MAAa,aAAa,gBAAyE,EAAA;AA1ErG,IAAA,IAAA,EAAA,CAAA;AA2EI,IAAM,MAAA,WAAA,GAAc,KAAK,cAAe,EAAA,CAAA;AACxC,IAAA,MAAM,cAAc,CAAG,EAAA,WAAA,CAAA,QAAA,CAAA,CAAA;AACvB,IAAA,IAAI,MAAoC,GAAA,MAAM,KAAM,CAAA,WAAW,CAAE,CAAA,IAAA;AAAA,MAC/D,CAAO,GAAA,KAAA;AACL,QAAA,QAAQ,IAAI,MAAQ;AAAA,UAClB,KAAK,GAAA;AACH,YAAO,OAAA,KAAA,CAAA,CAAA;AAAA,UACT,KAAK,GAAA;AACH,YAAA,OAAO,IAAI,IAAK,EAAA,CAAA;AAAA,UAClB;AACE,YAAA,MAAM,IAAI,KAAA,CAAM,CAA2B,wBAAA,EAAA,GAAA,CAAI,MAAS,CAAA,CAAA,CAAA,CAAA,CAAA;AAAA,SAC5D;AAAA,OACF;AAAA,KACF,CAAA;AACA,IAAA,IAAI,CAAC,MAAA;AAAQ,MAAO,OAAA,KAAA,CAAA,CAAA;AAGpB,IAAI,IAAA,gBAAA,IAAoB,iBAAiB,MAAQ,EAAA;AAC/C,MAAS,MAAA,GAAA,MAAA,CAAO,OAAO,CAAO,MAAA,KAAA;AA7FpC,QAAAC,IAAAA,GAAAA,CAAAA;AA6FuC,QAAA,OAAA,gBAAA,CAAiB,GAAI,CAAA,CAAA,CAAA,KAAK,CAAE,CAAA,iBAAA,EAAmB,CAAA,CAAE,QAASA,CAAAA,CAAAA,GAAAA,GAAA,MAAO,CAAA,SAAA,KAAP,IAAAA,GAAAA,KAAAA,CAAAA,GAAAA,GAAAA,CAAkB,KAAK,WAAuB,EAAA,CAAA,CAAA;AAAA,OAAC,CAAA,CAAA;AAAA,KAC5I;AAEA,IAAA,MAAM,YAA4B,GAAA,MAAA,CAAO,MAAO,CAAA,CAAC,KAAK,CAAM,KAAA;AAhGhE,MAAAA,IAAAA,GAAAA,CAAAA;AAiGM,MAAA,IAAA,CAAIA,GAAA,GAAA,CAAA,CAAE,SAAF,KAAA,IAAA,GAAA,KAAA,CAAA,GAAAA,IAAa,IAAM,EAAA;AACrB,QAAI,GAAA,CAAA,GAAA,CAAI,CAAE,CAAA,SAAA,CAAU,IAAI,CAAA,CAAA;AAAA,OAC1B;AACA,MAAO,OAAA,GAAA,CAAA;AAAA,KACT,sBAAO,GAAW,EAAA,CAAA,CAAA;AAElB,IAAA,MAAM,oBAAmB,EAAK,GAAA,IAAA,CAAA,SAAA,CAAU,kBAAmB,CAAA,6BAA6B,MAA/D,IAAoE,GAAA,EAAA,GAAA,KAAA,CAAA;AACzF,IAAA,MAAM,QAAW,GAAA,MAAM,IAAK,CAAA,UAAA,CAAW,WAAY,CAAA;AAAA,MACrD,MAAA,EAAQ,mBAAoB,gBAAmB,GAAA,EAAC,MAAM,gBAAgB,EAAA,GAAI,EAAM,GAAA;AAAA,QAC9E,eAAA,EAAiB,KAAM,CAAA,IAAA,CAAK,YAAY,CAAA;AAAA,OACzC;AAAA,MACD,QAAQ,CAAC,MAAA,EAAQ,eAAiB,EAAA,oBAAA,EAAsB,cAAc,WAAW,CAAA;AAAA,KAClF,CAAA,CAAA;AACD,IAAA,MAAM,QAAqB,GAAA,gBAAA,GACvB,QAAS,CAAA,KAAA,CAAM,MAAO,CAAA,CAAA,CAAA,KAAK,YAAa,CAAA,GAAA,CAAI,CAAE,CAAA,QAAA,CAAS,IAAI,CAAC,IAC5D,QAAS,CAAA,KAAA,CAAA;AAEb,IAAO,OAAA,MAAA,CAAO,IAAyB,CAAS,KAAA,KAAA;AAC9C,MAAO,OAAA,IAAA,CAAK,iBAAkB,CAAA,KAAA,EAAO,QAAQ,CAAA,CAAA;AAAA,KAC9C,CAAA,CAAA;AAAA,GACH;AAAA;AAAA,EAIQ,cAAiB,GAAA;AAzH3B,IAAA,IAAA,EAAA,CAAA;AA0HI,IAAA,OAAA,CACE,EAAK,GAAA,IAAA,CAAA,SAAA,CAAU,iBAAkB,CAAA,wBAAwB,MAAzD,IACA,GAAA,EAAA,GAAA,sCAAA,CAAA;AAAA,GAEJ;AAAA,EAEQ,iBAAA,CACN,OACA,QACqB,EAAA;AAnIzB,IAAA,IAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,CAAA;AAoII,IAAA,IAAI,UAAU,IAAM,EAAA;AAClB,MAAM,MAAA,IAAI,MAAM,CAAmC,iCAAA,CAAA,CAAA,CAAA;AAAA,KACrD;AACA,IAAI,IAAA,OAAO,UAAU,WAAa,EAAA;AAChC,MAAM,MAAA,IAAI,MAAM,CAAwC,sCAAA,CAAA,CAAA,CAAA;AAAA,KAC1D;AAEA,IAAM,MAAA,aAAA,GAAgB,WAClB,QAAS,CAAA,IAAA;AAAA,MAAK,CAAO,MAAA,KAAA;AA5I7B,QAAAA,IAAAA,GAAAA,EAAAC,GAAAC,EAAAA,GAAAA,EAAAC,GAAAC,EAAAA,GAAAA,CAAAA;AA6IU,QAAO,OAAA,MAAA,CAAA,QAAA,CAAS,WAASJ,GAAA,GAAA,KAAA,CAAM,cAAN,IAAAA,GAAAA,KAAAA,CAAAA,GAAAA,GAAAA,CAAiB,UACtC,EAACC,CAAAA,GAAAA,GAAA,MAAM,SAAN,KAAA,IAAA,GAAA,KAAA,CAAA,GAAAA,IAAiB,IAAQ,CAAA,IAAA,MAAA,CAAO,KAAK,WAAY,EAAA,MAAA,CAAMC,MAAA,KAAM,CAAA,SAAA,KAAN,gBAAAA,GAAiB,CAAA,IAAA,CAAK,oBAC9E,EAACC,CAAAA,GAAAA,GAAA,MAAM,SAAN,KAAA,IAAA,GAAA,KAAA,CAAA,GAAAA,IAAiB,SAAc,CAAA,IAAA,CAAA,MAAA,CAAO,SAAS,SAAa,IAAA,SAAA,EAAW,aAAiBC,KAAAA,CAAAA,GAAAA,GAAA,MAAM,SAAN,KAAA,IAAA,GAAA,KAAA,CAAA,GAAAA,IAAiB,SAAU,CAAA,WAAA,EAAA,CAAA,CAAA,CAAA;AAAA,OAAA;AAAA,KACxH,GAAA,KAAA,CAAA,CAAA;AAEN,IAAM,MAAA,KAAA,GAAA,CAAQ,EAAe,GAAA,CAAA,EAAA,GAAA,aAAA,IAAA,IAAA,GAAA,KAAA,CAAA,GAAA,aAAA,CAAA,SAAA,KAAf,IAA0B,GAAA,KAAA,CAAA,GAAA,EAAA,CAAA,IAAA;AAAA,MACtC,CAAA,CAAA,KAAK,EAAE,IAAS,KAAA,iBAAA;AAAA,KAAA,KADJ,IAEX,GAAA,KAAA,CAAA,GAAA,EAAA,CAAA,SAAA,CAAA;AAEH,IAAA,IAAI,QAA0C,GAAA,KAAA,CAAA,CAAA;AAC9C,IAAA,IAAI,MAAM,eAAmB,IAAA,EAAA,CAAE,EAAM,GAAA,KAAA,CAAA,eAAA,KAAN,mBAA6C,IAAM,CAAA,EAAA;AAChF,MAAA,QAAA,GAAW,EAAE,IAAM,EAAA,KAAA,CAAM,iBAA2B,IAAM,EAAA,MAAA,EAAQ,WAAW,SAAU,EAAA,CAAA;AAAA,KAC7E,MAAA,IAAA,CAAA,EAAA,GAAA,KAAA,CAAM,eAAN,KAAA,IAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAA6C,IAAM,EAAA;AAC7D,MAAA,MAAM,kBAAkB,KAAM,CAAA,eAAA,CAAA;AAC9B,MAAA,QAAA,GAAW,EAAE,IAAA,EAAM,eAAgB,CAAA,IAAA,EAAM,IAAM,EAAA,CAAA,EAAA,GAAA,eAAA,IAAA,IAAA,GAAA,KAAA,CAAA,GAAA,eAAA,CAAiB,IAAjB,KAAA,IAAA,GAAA,EAAA,GAAyB,MAAQ,EAAA,SAAA,EAAA,CAAW,EAAiB,GAAA,eAAA,IAAA,IAAA,GAAA,KAAA,CAAA,GAAA,eAAA,CAAA,SAAA,KAAjB,YAA8B,SAAU,EAAA,CAAA;AAAA,KACrI;AAEA,IAAA,MAAM,aAAa,KAAM,CAAA,iBAAA,GACrB,IAAI,IAAK,CAAA,KAAA,CAAM,iBAAiB,CAChC,GAAA,KAAA,CAAA,CAAA;AACJ,IAAO,OAAA;AAAA,MACL,KAAO,EAAA,KAAA,GAAQ,cAAe,CAAA,KAAK,CAAI,GAAA,KAAA,CAAA;AAAA,MACvC,QAAA;AAAA,MACA,UAAA;AAAA,MACA,GAAG,KAAA;AAAA,KACL,CAAA;AAAA,GACF;AACF;;ACvJO,MAAM,eAAe,cAAe,CAAA;AAAA,EACzC,EAAI,EAAA,YAAA;AACN,CAAC,CAAA;;ACZD,MAAM,sCAAiD,GAAA,0CAAA,CAAA;AACvD,MAAM,sCAAiD,GAAA,oCAAA,CAAA;AAEvD,MAAM,wBAAyD,GAAA;AAAA;AAAA,EAE7D,uBAAA,EAAyB,CAAC,SAAA,EAAW,WAAW,CAAA;AAAA,EAChD,8BAAA,EAAgC,CAAC,SAAA,EAAW,WAAW,CAAA;AAAA,EACvD,uBAAA,EAAyB,CAAC,SAAA,EAAW,WAAW,CAAA;AAAA,EAChD,8BAAA,EAAgC,CAAC,SAAA,EAAW,WAAW,CAAA;AAAA,EACvD,uBAAA,EAAyB,CAAC,SAAA,EAAW,WAAW,CAAA;AAAA,EAChD,uBAAA,EAAyB,CAAC,SAAA,EAAW,SAAS,CAAA;AAAA;AAAA;AAAA,EAG9C,eAAA,EAAiB,CAAC,qBAAA,EAAuB,mBAAmB,CAAA;AAAA,EAC5D,sBAAA,EAAwB,CAAC,qBAAA,EAAuB,oBAAoB,CAAA;AAAA,EACpE,eAAA,EAAiB,CAAC,qBAAA,EAAuB,oBAAoB,CAAA;AAAA,EAC7D,sBAAA,EAAwB,CAAC,qBAAA,EAAuB,mBAAmB,CAAA;AAAA,EACnE,eAAA,EAAiB,CAAC,qBAAA,EAAuB,mBAAmB,CAAA;AAAA,EAC5D,eAAA,EAAiB,CAAC,qBAAA,EAAuB,oBAAoB,CAAA;AAAA;AAAA,EAE7D,OAAA,EAAS,CAAC,SAAA,EAAW,SAAS,CAAA;AAAA,EAC9B,MAAA,EAAQ,CAAC,SAAA,EAAW,SAAS,CAAA;AAAA,EAC7B,UAAA,EAAY,CAAC,SAAA,EAAW,SAAS,CAAA;AAAA,EACjC,QAAA,EAAU,CAAC,SAAA,EAAW,SAAS,CAAA;AAAA,EAC/B,YAAA,EAAc,CAAC,SAAA,EAAW,SAAS,CAAA;AAAA,EACnC,SAAA,EAAW,CAAC,SAAA,EAAW,SAAS,CAAA;AAAA,EAChC,SAAA,EAAW,CAAC,SAAA,EAAW,SAAS,CAAA;AAAA,EAChC,UAAA,EAAY,CAAC,SAAA,EAAW,SAAS,CAAA;AAAA,EACjC,YAAA,EAAc,CAAC,SAAA,EAAW,SAAS,CAAA;AAAA,EACnC,UAAA,EAAY,CAAC,SAAA,EAAW,SAAS,CAAA;AAAA,EACjC,KAAA,EAAO,CAAC,SAAA,EAAW,SAAS,CAAA;AAAA,EAC5B,OAAA,EAAS,CAAC,SAAA,EAAW,SAAS,CAAA;AAAA,EAC9B,MAAA,EAAQ,CAAC,SAAA,EAAW,SAAS,CAAA;AAAA,EAC7B,UAAA,EAAY,CAAC,SAAA,EAAW,SAAS,CAAA;AAAA,EACjC,QAAA,EAAU,CAAC,SAAA,EAAW,SAAS,CAAA;AAAA,EAC/B,OAAA,EAAS,CAAC,SAAA,EAAW,SAAS,CAAA;AAAA,EAC9B,OAAA,EAAS,CAAC,SAAA,EAAW,SAAS,CAAA;AAAA,EAC9B,WAAA,EAAa,CAAC,SAAA,EAAW,SAAS,CAAA;AAAA,EAClC,MAAA,EAAQ,CAAC,SAAA,EAAW,SAAS,CAAA;AAAA,EAC7B,SAAA,EAAW,CAAC,SAAA,EAAW,SAAS,CAAA;AAAA,EAChC,OAAA,EAAS,CAAC,SAAA,EAAW,SAAS,CAAA;AAChC,CAAA,CAAA;AAIA,IAAI,uBAAoE,GAAA,KAAA,CAAA,CAAA;AAGxE,MAAM,uBAAuB,MAAM;AACjC,EAAA,IAAI,uBAAyB,EAAA;AAC3B,IAAO,OAAA,uBAAA,CAAA;AAAA,GACT;AAEA,EAAA,IAAI,iBAAoB,GAAA,wBAAA,CAAA;AACxB,EAAM,MAAA,MAAA,GAAS,OAAO,YAAY,CAAA,CAAA;AAElC,EAAM,MAAA,wBAAA,GAA2B,MAAO,CAAA,iBAAA,CAAkB,8BAA8B,CAAA,CAAA;AACxF,EAAA,IAAI,wBAA0B,EAAA;AAC5B,IAAQ,OAAA,CAAA,KAAA,CAAM,wCAAwC,wBAAwB,CAAA,CAAA;AAE9E,IAAM,MAAA,kBAAA,GAAqB,yBAAyB,KAAM,CAAA,IAAI,EAAE,MAAO,CAAA,CAAC,KAAK,IAAS,KAAA;AACpF,MAAI,IAAA,IAAA,CAAK,KAAM,CAAA,sCAAsC,CAAG,EAAA;AACtD,QAAM,MAAA,WAAA,GAAc,IAAK,CAAA,KAAA,CAAM,KAAK,CAAA,CAAA;AACpC,QAAI,GAAA,CAAA,WAAA,CAAY,CAAC,CAAC,CAAI,GAAA,CAAC,YAAY,CAAC,CAAA,EAAG,WAAY,CAAA,CAAC,CAAC,CAAA,CAAA;AAAA,OAChD,MAAA;AACL,QAAQ,OAAA,CAAA,IAAA,CAAK,0IAA4I,EAAA,IAAA,EAAM,sCAAsC,CAAA,CAAA;AAAA,OACvM;AACA,MAAO,OAAA,GAAA,CAAA;AAAA,KACT,EAAG,EAAgC,CAAA,CAAA;AAGnC,IAAoB,iBAAA,GAAA;AAAA,MAClB,GAAG,iBAAA;AAAA,MACH,GAAG,kBAAA;AAAA,KACL,CAAA;AAAA,GACF;AAGA,EAA0B,uBAAA,GAAA,iBAAA,CAAA;AAC1B,EAAO,OAAA,uBAAA,CAAA;AACT,CAAA,CAAA;AAIa,MAAA,+BAAA,GAAkC,CAC7C,IACqB,KAAA;AACrB,EAAA,MAAM,oBAAoB,oBAAqB,EAAA,CAAA;AAG/C,EAAI,IAAA,IAAA,IAAQ,QAAQ,iBAAmB,EAAA;AACrC,IAAO,OAAA;AAAA,MACL,UAAY,EAAA,iBAAA,CAAkB,IAAI,CAAA,CAAE,CAAC,CAAA;AAAA,MACrC,UAAY,EAAA,iBAAA,CAAkB,IAAI,CAAA,CAAE,CAAC,CAAA;AAAA,KACvC,CAAA;AAAA,GACF;AAKA,EAAI,IAAA,IAAA,IAAA,IAAA,GAAA,KAAA,CAAA,GAAA,IAAA,CAAM,MAAM,sCAAyC,CAAA,EAAA;AACvD,IAAM,MAAA,KAAA,GAAQ,IAAK,CAAA,KAAA,CAAM,KAAK,CAAA,CAAA;AAC9B,IAAO,OAAA;AAAA,MACL,UAAA,EAAY,MAAM,CAAC,CAAA;AAAA,MACnB,UAAA,EAAY,MAAM,CAAC,CAAA;AAAA,KACrB,CAAA;AAAA,GACF;AAGA,EAAA,OAAO,gCAAgC,OAAO,CAAA,CAAA;AAEhD;;ACpGa,MAAA,qBAAA,GAAwB,CACnC,YACqB,KAAA;AACrB,EAAI,IAAA,OAAO,iBAAiB,WAAa,EAAA;AACvC,IAAA,OAAO,gCAAgC,CAAe,aAAA,CAAA,CAAA,CAAA;AAAA,GACxD;AACA,EAAA,QAAQ,YAAc;AAAA,IACpB,KAAK,gBAAiB,CAAA,OAAA,CAAA;AAAA,IACtB,KAAK,gBAAiB,CAAA,aAAA,CAAA;AAAA,IACtB,KAAK,gBAAiB,CAAA,OAAA,CAAA;AAAA,IACtB,KAAK,gBAAiB,CAAA,aAAA,CAAA;AAAA,IACtB,KAAK,gBAAiB,CAAA,OAAA;AACpB,MAAO,OAAA,+BAAA,CAAgC,SAAS,YAAc,CAAA,CAAA,CAAA,CAAA;AAAA,IAChE;AACE,MAAA,OAAO,gCAAgC,CAAe,aAAA,CAAA,CAAA,CAAA;AAAA,GAC1D;AACF;;AChBa,MAAA,eAAA,GAAkB,CAAC,KAAiB,KAAA;AAC/C,EACE,uBAAA,KAAA,CAAA,aAAA;AAAA,IAAC,kBAAA;AAAA,IAAA;AAAA,MACC,KAAA;AAAA,MACA,KAAM,EAAA,qBAAA;AAAA,MACN,eAAe,EAAA,IAAA;AAAA,MACf,GAAI,EAAA,OAAA;AAAA,KAAA;AAAA,GACN,CAAA;AAEJ;;ACAA,MAAM,uBAAA,GAA0B,CAAC,gBAAgC,KAAA;AAC/D,EAAM,MAAA,QAAA,GAAW,OAAO,WAAW,CAAA,CAAA;AACnC,EAAM,MAAA,aAAA,GAAgB,OAAO,iBAAiB,CAAA,CAAA;AAE9C,EAAA,MAAM,EAAE,KAAA,EAAO,KAAO,EAAA,OAAA,EAAY,GAAA,QAAA;AAAA,IAChC,YAAY,aAAc,CAAA,YAAA,CAAa,gBAAgB,CAAA;AAAA,IACvD,CAAC,aAAa,CAAA;AAAA,GAChB,CAAA;AAEA,EAAA,SAAA,CAAU,MAAM;AACd,IAAA,IAAI,KAAO,EAAA;AACT,MAAA,QAAA,CAAS,KAAK,KAAK,CAAA,CAAA;AAAA,KACrB;AAAA,GACC,EAAA,CAAC,KAAO,EAAA,QAAQ,CAAC,CAAA,CAAA;AAEpB,EAAO,OAAA,EAAE,OAAS,EAAA,KAAA,EAAO,KAAM,EAAA,CAAA;AACjC,CAAA,CAAA;AAOO,MAAM,UAAa,GAAA,CAAC,EAAE,KAAA,EAAO,QAA8B,KAAA;AAChE,EAAA,MAAM,OAA8C,GAAA;AAAA,IAClD;AAAA,MACE,KAAO,EAAA,MAAA;AAAA,MACP,KAAO,EAAA,gBAAA;AAAA,MACP,QAAQ,CAAe,WAAA,KAAA;AAvD7B,QAAA,IAAA,EAAA,EAAA,EAAA,CAAA;AAwDQ,QAAA,IAAI,EAAC,CAAA,EAAA,GAAA,WAAA,CAAY,SAAZ,KAAA,IAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAuB,IAAM,CAAA,EAAA;AAChC,UAAA,iEAAS,4BAA0B,CAAA,CAAA;AAAA,SACrC;AAEA,QAAQ,uBAAA,KAAA,CAAA,aAAA;AAAA,UAAC,IAAA;AAAA,UAAA;AAAA,YACP,EAAA,EAAI,CAAY,SAAA,EAAA,CAAA,EAAA,GAAA,WAAA,CAAY,SAAU,CAAA,SAAA,KAAtB,IAAmC,GAAA,EAAA,GAAA,iBAAA,CAAA,CAAA,EAAqB,WAAY,CAAA,SAAA,CAAU,IAAQ,CAAA,CAAA,EAAA,WAAA,CAAY,SAAU,CAAA,IAAA,CAAA,MAAA,CAAA;AAAA,YAC5H,SAAA,EAAS,YAAY,SAAU,CAAA,IAAA;AAAA,WAAA;AAAA,UAE5B,YAAY,SAAU,CAAA,IAAA;AAAA,SACzB,CAAA;AAAA,OACJ;AAAA,KACF;AAAA,IACA;AAAA,MACE,KAAO,EAAA,MAAA;AAAA,MACP,KAAO,EAAA,gBAAA;AAAA,MACP,QAAQ,CAAe,WAAA,KAAA;AACnB,QAAO,uBAAA,KAAA,CAAA,aAAA,CAAA,KAAA,CAAA,QAAA,EAAA,IAAA,EAAG,WAAY,CAAA,SAAA,CAAU,IAAK,CAAA,CAAA;AAAA,OACzC;AAAA,KACF;AAAA,IACA;AAAA,MACE,KAAO,EAAA,OAAA;AAAA,MACP,KAAO,EAAA,YAAA;AAAA,MACP,MAAQ,EAAA,CAAA,WAAA,KACR,WAAY,CAAA,KAAA,6EAEL,KAAA,CAAA,aAAA,CAAA,aAAA,EAAA,EAAc,SAAW,EAAA,WAAA,CAAY,KACnC,EAAA,EAAA,WAAA,CAAY,KAAM,CAAA,IACrB,CACF,CACE,GAAA,IAAA;AAAA,KACR;AAAA,IACA;AAAA,MACE,KAAO,EAAA,UAAA;AAAA,MACP,KAAO,EAAA,iBAAA;AAAA,MACP,QAAQ,CAAY,WAAA,KAAA;AA1F1B,QAAA,IAAA,EAAA,CAAA;AA2FQ,QAAA,OAAA,WAAA,CAAY,QACV,mBAAA,KAAA,CAAA,aAAA,CAAA,KAAA,CAAA,QAAA,EAAA,IAAA,kBACG,KAAA,CAAA,aAAA,CAAA,aAAA,EAAA,EAAc,SAAW,EAAA,WAAA,CAAY,QACnC,EAAA,EAAA,CAAA,EAAA,GAAA,WAAA,CAAY,QAAZ,KAAA,IAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAsB,IACzB,CACF,CACE,GAAA,IAAA,CAAA;AAAA,OAAA;AAAA,KACR;AAAA,IACA;AAAA,MACE,KAAO,EAAA,MAAA;AAAA,MACP,KAAO,EAAA,mBAAA;AAAA,MACP,MAAA,EAAQ,iBACN,WAAY,CAAA,UAAA,6DACP,WAAY,CAAA,UAAA,CAAW,kBAAmB,EAAE,CAC7C,GAAA,IAAA;AAAA,KACR;AAAA,GACF,CAAA;AACA,EAAA,MAAA,CACG,QAAQ,CAAK,CAAA,KAAA;AA7GlB,IAAA,IAAA,EAAA,CAAA;AA8GM,IAAO,OAAA,CAAA,EAAA,GAAA,CAAA,CAAE,UAAF,KAAA,IAAA,GAAA,EAAA,GAAgB,EAAC,CAAA;AAAA,GACzB,CAAA,CACA,MAAiB,CAAA,CAAC,OAAO,IAAS,KAAA;AACjC,IAAI,IAAA,CAAC,IAAQ,IAAA,CAAC,IAAK,CAAA,KAAA,IAAS,KAAM,CAAA,SAAA,CAAU,CAAK,CAAA,KAAA,CAAA,KAAM,IAAK,CAAA,KAAK,CAAM,KAAA,CAAA,CAAA;AACrE,MAAO,OAAA,KAAA,CAAA;AACT,IAAM,KAAA,CAAA,IAAA,CAAK,KAAK,KAAK,CAAA,CAAA;AACrB,IAAA,OAAA,CAAQ,IAAK,CAAA;AAAA,MACX,OAAO,IAAK,CAAA,KAAA;AAAA,MACZ,KAAO,EAAA,KAAA;AAAA,MACP,UAAA,EAAY,CAAC,EAAA,EAAI,EAAO,KAAA;AAvHhC,QAAA,IAAA,EAAA,EAAA,EAAA,CAAA;AAwHU,QAAA,MAAM,YAAe,GAAA,CAAA,EAAA,IAAA,IAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAI,UACrB,IAAA,CAAA,EAAA,GAAA,EAAA,CAAG,UAAW,CAAA,IAAA,CAAK,CAAK,CAAA,KAAA,CAAA,CAAE,KAAU,KAAA,IAAA,CAAK,KAAK,CAAA,KAA9C,mBAAiD,YACjD,GAAA,KAAA,CAAA,CAAA;AACJ,QAAA,MAAM,YAAe,GAAA,CAAA,EAAA,IAAA,IAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAI,UACrB,IAAA,CAAA,EAAA,GAAA,EAAA,CAAG,UAAW,CAAA,IAAA,CAAK,CAAK,CAAA,KAAA,CAAA,CAAE,KAAU,KAAA,IAAA,CAAK,KAAK,CAAA,KAA9C,mBAAiD,YACjD,GAAA,KAAA,CAAA,CAAA;AACJ,QAAI,IAAA,CAAC,YAAgB,IAAA,YAAA,IAAgB,YAAgB,IAAA,IAAA,GAAA,YAAA,GAAA,CAAA,CAAA;AAAI,UAAO,OAAA,CAAA,CAAA,CAAA;AAChE,QAAI,IAAA,CAAC,gBAAgB,YAAe,GAAA,YAAA;AAAc,UAAO,OAAA,CAAA,CAAA;AACzD,QAAO,OAAA,CAAA,CAAA;AAAA,OACT;AAAA,MACA,QAAQ,CAAoB,gBAAA,KAAA;AAlIpC,QAAA,IAAA,EAAA,CAAA;AAmIU,QAAM,MAAA,iBAAA,GAAA,CAAoB,gBAAkB,IAAA,IAAA,GAAA,KAAA,CAAA,GAAA,gBAAA,CAAA,UAAA,IACxC,gBAAiB,CAAA,UAAA,CAAW,IAAK,CAAA,CAAA,CAAA,KAAK,CAAE,CAAA,KAAA,KAAU,IAAK,CAAA,KAAK,CAC5D,GAAA,KAAA,CAAA,CAAA;AACJ,QAAA,MAAM,SAAiC,GAAA;AAAA,UACrC,MAAQ,EAAA,CAAA;AAAA,UACR,eAAiB,EAAA,qBAAA;AAAA,YACf,iBAAmB,IAAA,IAAA,GAAA,KAAA,CAAA,GAAA,iBAAA,CAAA,YAAA;AAAA,WACnB,CAAA,UAAA;AAAA,UACF,KAAO,EAAA,qBAAA;AAAA,YACL,iBAAmB,IAAA,IAAA,GAAA,KAAA,CAAA,GAAA,iBAAA,CAAA,YAAA;AAAA,WACnB,CAAA,UAAA;AAAA,UACF,QAAU,EAAA,MAAA;AAAA,SACZ,CAAA;AACA,QAAA,MAAM,KAAQ,GAAA,CAAA,EAAA,GAAA,iBAAA,IAAA,IAAA,GAAA,KAAA,CAAA,GAAA,iBAAA,CAAmB,UAAnB,KAAA,IAAA,GAAA,EAAA,GAAiC,GAAG,iBAAmB,IAAA,IAAA,GAAA,KAAA,CAAA,GAAA,iBAAA,CAAA,YAAA,CAAA,EAAA,CAAA,CAAA;AACrE,QAAO,OAAA,QAAO,iBAAmB,IAAA,IAAA,GAAA,KAAA,CAAA,GAAA,iBAAA,CAAA,YAAA,CAAA,KAAiB,WAChD,mBAAA,KAAA,CAAA,aAAA;AAAA,UAAC,IAAA;AAAA,UAAA;AAAA,YACC,KAAA;AAAA,YACA,KAAO,EAAA,SAAA;AAAA,WAAA;AAAA,SAEP,GAAA,IAAA,CAAA;AAAA,OACN;AAAA,KACD,CAAA,CAAA;AACD,IAAO,OAAA,KAAA,CAAA;AAAA,GACT,EAAG,EAAE,CAAA,CAAA;AAEP,EAAA,OAAA,CAAQ,IAAK,CAAA;AAAA,IACX,KAAO,EAAA,OAAA;AAAA,IACP,KAAO,EAAA,OAAA;AAAA,IACP,KAAO,EAAA,cAAA;AAAA,IACP,QAAQ,CAAoB,gBAAA,KAAA;AAhKhC,MAAA,IAAA,EAAA,CAAA;AAiKM,MAAA,MAAM,SAAiC,GAAA;AAAA,QACrC,MAAQ,EAAA,CAAA;AAAA,QACR,eAAiB,EAAA,qBAAA,CAAsB,gBAAkB,IAAA,IAAA,GAAA,KAAA,CAAA,GAAA,gBAAA,CAAA,YAAY,CAAE,CAAA,UAAA;AAAA,QACvE,KAAO,EAAA,qBAAA,CAAsB,gBAAkB,IAAA,IAAA,GAAA,KAAA,CAAA,GAAA,gBAAA,CAAA,YAAY,CAAE,CAAA,UAAA;AAAA,QAC7D,KAAO,EAAA,OAAA;AAAA,QACP,QAAU,EAAA,MAAA;AAAA,OACZ,CAAA;AACA,MAAA,MAAM,KAAQ,GAAA,CAAA,EAAA,GAAA,gBAAA,IAAA,IAAA,GAAA,KAAA,CAAA,GAAA,gBAAA,CAAkB,UAAlB,KAAA,IAAA,GAAA,EAAA,GAAgC,GAAG,gBAAkB,IAAA,IAAA,GAAA,KAAA,CAAA,GAAA,gBAAA,CAAA,YAAA,CAAA,EAAA,CAAA,CAAA;AACnE,MAAO,OAAA,OAAO,iBAAiB,YAAiB,KAAA,WAAA,uCAC7C,IAAK,EAAA,EAAA,KAAA,EAAc,KAAO,EAAA,SAAA,EAAW,CACpC,GAAA,IAAA,CAAA;AAAA,KACN;AAAA,GACD,CAAA,CAAA;AAGD,EAAA,MAAM,wBAA2B,GAAA,MAAA,CAAO,MAAU,IAAA,EAAA,GAAK,OAAO,MAAS,GAAA,EAAA,CAAA;AAEvE,EAAA,MAAM,wBACJ,GAAA,MAAA,CAAO,MAAS,GAAA,GAAA,GAAM,wBAA2B,GAAA,GAAA,CAAA;AASnD,EAAM,MAAA,qBAAA,GACJ,wBAA2B,GAAA,wBAAA,GACvB,wBACA,GAAA,wBAAA,CAAA;AAEN,EACE,uBAAA,KAAA,CAAA,aAAA,CAAC,KAAI,EAAA,EAAA,aAAA,EAAY,mBACf,EAAA,kBAAA,KAAA,CAAA,aAAA;AAAA,IAAC,KAAA;AAAA,IAAA;AAAA,MACC,OAAO,KAAS,IAAA,IAAA,GAAA,KAAA,GAAA,0BAAA;AAAA,MAChB,OAAS,EAAA;AAAA,QACP,MAAQ,EAAA,IAAA;AAAA,QACR,MAAQ,EAAA,IAAA;AAAA,QACR,OAAS,EAAA,OAAA;AAAA,QACT,QAAU,EAAA,qBAAA;AAAA,QACV,iBAAiB,CAAC,qBAAA,EAAuB,EAAI,EAAA,EAAA,EAAI,KAAK,GAAG,CAAA;AAAA,OAC3D;AAAA,MACA,OAAA;AAAA,MACA,IAAM,EAAA,MAAA;AAAA,KAAA;AAAA,GAEV,CAAA,CAAA;AAEJ,CAAA,CAAA;AAMO,MAAM,cAAiB,GAAA,CAAC,EAAC,KAAA,EAAO,kBAA2C,KAAA;AAChF,EAAA,MAAM,EAAE,OAAS,EAAA,KAAA,EAAO,OAAO,IAAK,EAAA,GAAI,wBAAwB,gBAAgB,CAAA,CAAA;AAEhF,EAAA,IAAI,OAAS,EAAA;AACX,IAAA,2CAAQ,QAAS,EAAA,IAAA,CAAA,CAAA;AAAA,aACR,KAAO,EAAA;AAChB,IAAA,OAAO,gBAAgB,KAAK,CAAA,CAAA;AAAA,GAC9B;AAEA,EAAA,2CAAQ,UAAW,EAAA,EAAA,KAAA,EAAe,MAAQ,EAAA,IAAA,IAAQ,EAAI,EAAA,CAAA,CAAA;AACxD;;AClMO,MAAM,kBAAkB,YAAa,CAAA;AAAA,EAC1C,EAAI,EAAA,YAAA;AAAA,EACJ,MAAQ,EAAA;AAAA,IACN,IAAM,EAAA,YAAA;AAAA,GACR;AAAA,EACA,IAAM,EAAA;AAAA,IACJ,gBAAiB,CAAA;AAAA,MACf,GAAK,EAAA,iBAAA;AAAA,MACL,IAAM,EAAA;AAAA,QACJ,SAAW,EAAA,YAAA;AAAA,QACX,UAAY,EAAA,aAAA;AAAA,QACZ,QAAU,EAAA,WAAA;AAAA,OACZ;AAAA,MACA,OAAA,EAAS,CAAC,EAAE,SAAA,EAAW,YAAY,QAAS,EAAA,KAC1C,IAAI,qBAAsB,CAAA;AAAA,QACxB,SAAA;AAAA,QACA,UAAA;AAAA,QACA,QAAA;AAAA,OACD,CAAA;AAAA,KACJ,CAAA;AAAA,GACH;AACF,CAAC,EAAA;AAEM,MAAM,iBAAiB,eAAgB,CAAA,OAAA;AAAA,EAC5C,uBAAwB,CAAA;AAAA,IACtB,IAAM,EAAA,kBAAA;AAAA,IACN,SAAA,EAAW,MACT,OAAO,yBAA6B,EAAE,IAAK,CAAA,CAAA,CAAA,KAAK,EAAE,cAAc,CAAA;AAAA,IAClE,UAAY,EAAA,YAAA;AAAA,GACb,CAAA;AACH,EAAA;AAEO,MAAM,yBAAyB,eAAgB,CAAA,OAAA;AAAA,EACpD,wBAAyB,CAAA;AAAA,IACvB,IAAM,EAAA,kBAAA;AAAA,IACN,SAAW,EAAA;AAAA,MACT,IAAA,EAAM,MAAM,OAAO,yBAAwB,EAAE,IAAK,CAAA,CAAA,CAAA,KAAK,EAAE,SAAS,CAAA;AAAA,KACpE;AAAA,GACD,CAAA;AACH;;;;"}