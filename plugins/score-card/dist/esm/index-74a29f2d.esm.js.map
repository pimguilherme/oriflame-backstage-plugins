{"version":3,"file":"index-74a29f2d.esm.js","sources":["../../src/components/ScoreCard/helpers/getScoreTableEntries.ts","../../src/components/ScoreCard/columns/areaColumn.tsx","../../src/components/ScoreCard/columns/detailsColumn.tsx","../../src/components/ScoreCard/columns/scorePercentColumn.tsx","../../src/components/ScoreCard/helpers/getWikiUrl.ts","../../src/components/ScoreCard/columns/titleColumn.tsx","../../src/components/ScoreCard/sub-components/getReviewerLink.tsx","../../src/components/ScoreCard/ScoreCard.tsx"],"sourcesContent":["/*\n * Copyright 2022 Oriflame\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { EntityScoreEntry } from '../../../api';\nimport { EntityScoreExtended } from '../../../api/types';\n\n// this is an interface used for table entries. We need to enrich the original EntityScoreEntry with the \"area\" group, see bellow allEntries reduce\nexport interface EntityScoreTableEntry extends EntityScoreEntry {\n  area: string;\n}\n/*\n  here comes the tricky part. We have json like this:\n  {\n    ...\n    areaScores: [\n      {\n        id: 1,\n        title: \"documentation\",\n        ...\n        scoreEntries : [\n          {\n            id: 222,\n            title: \"readme\"\n          },\n          {\n            id: 333,\n            title: \"RFP\"\n          },\n          ... other score entries\n        ]\n      },\n      ... other areas with other score entries\n    ]\n  }\n  and we want to have a flat array of score entries for table grouped by area, e.g.\n  [\n    {\n      id: 222,\n      title: \"readme\",\n      area: \"documentation\",\n      ...\n    },\n    {\n      id: 333,\n      title: \"RFP\",\n      area: \"documentation\",\n      ...\n    },\n    ...\n  ]\n  so we want to basically go through all areaScores and get all its entries to one big array with a new\n  property \"area\" pointing back to the area so we can later on get the area score...\n  */\nexport function getScoreTableEntries(\n  value: EntityScoreExtended | null | undefined,\n): EntityScoreTableEntry[] {\n  if (!value || value.areaScores.length <= 0) return [];\n  return value.areaScores.reduce<EntityScoreTableEntry[]>(\n    (entries, area) =>\n      entries.concat(\n        area.scoreEntries.map(entry => {\n          return {\n            area: area.title,\n            ...entry,\n          };\n        }),\n      ),\n    [],\n  );\n}\n","/*\n * Copyright 2022 Oriflame\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { TableColumn } from '@backstage/core-components';\nimport { Chip, Link } from '@material-ui/core';\nimport { scoreToColorConverter } from '../../../helpers/scoreToColorConverter';\nimport { EntityScoreTableEntry } from '../helpers/getScoreTableEntries';\nimport React from 'react';\nimport { EntityScoreExtended } from '../../../api/types';\n\nexport function areaColumn(\n  value: EntityScoreExtended | null | undefined,\n): TableColumn<EntityScoreTableEntry> {\n  return {\n    title: 'Area',\n    field: 'area',\n    grouping: true,\n    groupTitle: 'Area',\n    defaultGroupOrder: 0,\n    width: '1px',\n    render: (data, type) => {\n      if (type === 'group') {\n        // we need to find the area..it's based on title (see allEntries reduce below) as we can used this for ordering too\n        const area = value?.areaScores.find(a => a.title === data.toString());\n        const areaGateStyle: React.CSSProperties = {\n          marginTop: '0.5rem',\n          marginRight: '1rem',\n          backgroundColor: scoreToColorConverter(area?.scoreSuccess).background,\n          color: scoreToColorConverter(area?.scoreSuccess).foreground,\n          float: 'right',\n          minWidth: '4rem',\n        };\n        const areaGateLabel = area?.scoreLabel ?? `${area?.scorePercent} %`;\n        return (\n          <span>\n            <>\n            {data}\n            <Chip label={areaGateLabel} style={areaGateStyle} />\n            </>\n          </span>\n          );\n      }\n      return <Link>{data.area}</Link>;\n    },\n  };\n}\n","/*\n * Copyright 2022 Oriflame\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { MarkdownContent, TableColumn } from '@backstage/core-components';\nimport React from 'react';\nimport { EntityScoreTableEntry } from '../helpers/getScoreTableEntries';\nimport { nameToColorCombinationConverter } from '../../../helpers/nameToColorCombinationConverter';\n\nexport const detailsColumn: TableColumn<EntityScoreTableEntry> = {\n  title: 'Details',\n  field: 'details',\n  grouping: false,\n  render: entityScoreEntry => {\n    const scoreHints = (entityScoreEntry.scoreHints as string[])?.join?.(', ');\n    const hints = scoreHints ?? entityScoreEntry.scoreHints;\n    return (\n      <div>\n        <MarkdownContent dialect='gfm' content={entityScoreEntry.details} />\n        {\n          entityScoreEntry.extraDetails\n            ? <div style={{\n              marginTop: '10px',\n              padding: '1px 8px',\n              color: nameToColorCombinationConverter(entityScoreEntry.extraDetailsColor ?? `extra-details-${entityScoreEntry.scoreSuccess}`).foreground,\n              backgroundColor: nameToColorCombinationConverter(entityScoreEntry.extraDetailsColor ?? `extra-details-${entityScoreEntry.scoreSuccess}`).background,\n              fontStyle: 'italic'\n            }}>\n              <MarkdownContent content={entityScoreEntry.extraDetails} />\n            </div>\n            : null\n\n        }\n        {hints ? <em>hints: {hints}</em> : null}\n      </div>\n    );\n  },\n};\n","/*\n * Copyright 2022 Oriflame\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { TableColumn } from '@backstage/core-components';\nimport { Chip } from '@material-ui/core';\nimport React from 'react';\nimport { scoreToColorConverter } from '../../../helpers/scoreToColorConverter';\nimport { EntityScoreTableEntry } from '../helpers/getScoreTableEntries';\n\nexport const scorePercentColumn: TableColumn<EntityScoreTableEntry> = {\n  title: <div style={{ minWidth: '3.5rem' }}>Score</div>,\n  field: 'scorePercent',\n  align: 'right',\n  grouping: false,\n  width: '1%',\n  render: entityScoreEntry => {\n    const chipStyle: React.CSSProperties = {\n      margin: 0,\n      backgroundColor: scoreToColorConverter(entityScoreEntry?.scoreSuccess).background,\n      color: scoreToColorConverter(entityScoreEntry?.scoreSuccess).foreground,\n      minWidth: '4rem',\n    };\n    const label = entityScoreEntry?.scoreLabel ?? `${entityScoreEntry.scorePercent} %`;\n    return typeof entityScoreEntry.scorePercent !== 'undefined' ? (\n      <Chip label={label} style={chipStyle} />\n    ) : null;\n  },\n};\n","/*\n * Copyright 2022 Oriflame\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { EntityScoreEntry } from '../../../api/types';\n\nexport function getWikiUrl(\n  wikiLinkTemplate: string,\n  entry: EntityScoreEntry | null | undefined,\n): string {\n  if (!entry) return wikiLinkTemplate.replace(/\\{[^\\}]+\\}/g, '');\n  return wikiLinkTemplate.replace(/\\{[^\\}]+\\}/g, matched => {\n    const keyName = matched.substring(1, matched.length - 1);\n    const value = entry[keyName as keyof EntityScoreEntry];\n    return !value ? '' : value.toString();\n  });\n}\n","/*\n * Copyright 2022 Oriflame\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { TableColumn } from '@backstage/core-components';\nimport { Link } from '@material-ui/core';\nimport React from 'react';\nimport { EntityScoreTableEntry } from '../helpers/getScoreTableEntries';\nimport { getWikiUrl } from '../helpers/getWikiUrl';\nimport { nameToColorCombinationConverter } from '../../../helpers/nameToColorCombinationConverter';\n\nexport function titleColumn(\n  wikiLinkTemplate: string,\n): TableColumn<EntityScoreTableEntry> {\n  return {\n    title: <div style={{ minWidth: '7rem' }}>Requirement</div>,\n    field: 'title',\n    grouping: false,\n    width: '1%',\n    render: entityScoreEntry => {\n      const wikiUrl = getWikiUrl(wikiLinkTemplate, entityScoreEntry);\n      const title = (\n        entityScoreEntry.titleLabel ? \n          <>\n            <span style={{ \n              fontSize: '12px',\n              borderRadius: '4px', \n              padding: '0px 4px',\n              display: 'inline-block',\n              marginBottom: '4px',\n              color: nameToColorCombinationConverter(entityScoreEntry.titleLabelColor).foreground,\n              backgroundColor: nameToColorCombinationConverter(entityScoreEntry.titleLabelColor).background\n            }}>\n                {entityScoreEntry.titleLabel} \n            </span><br/>\n            {entityScoreEntry.title}\n          </>\n          : <>{entityScoreEntry.title}</>\n      );\n\n      return (<span style={{ lineHeight: '20px' }}>\n          {wikiUrl ? (\n          <Link\n            href={wikiUrl}\n            target=\"_blank\"\n            data-id={entityScoreEntry.id}\n            >\n            {title}\n          </Link>\n        ) : (\n          <>{title}</>\n        )}\n          {entityScoreEntry.isOptional ? ' (Optional)' : null}\n        </span>\n      )\n    },\n  };\n}\n","/*\n * Copyright 2022 Oriflame\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { EntityRefLink } from '@backstage/plugin-catalog-react';\nimport React from 'react';\nimport { EntityScoreExtended } from '../../../api/types';\n\nexport function getReviewerLink(value: EntityScoreExtended) {\n  return (\n    <div style={{ textAlign: 'right', margin: '0.2rem' }}>\n      {value.reviewer ? (\n        <>\n          Review done by&nbsp;\n          <EntityRefLink entityRef={value.reviewer}>\n            {value.reviewer?.name}\n          </EntityRefLink>\n          &nbsp;at&nbsp;\n          {value.reviewDate ? value.reviewDate.toLocaleDateString() : 'unknown'}\n        </>\n      ) : (\n        <>Not yet reviewed.</>\n      )}\n    </div>\n  );\n}\n","/*\n * Copyright 2022 Oriflame\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Entity } from '@backstage/catalog-model';\nimport { useEntity } from '@backstage/plugin-catalog-react';\nimport { Chip, Grid } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport React, { useEffect } from 'react';\nimport useAsync from 'react-use/lib/useAsync';\n\nimport {\n  EmptyState,\n  InfoCard,\n  InfoCardVariants,\n  Progress,\n  Table,\n  TableColumn,\n} from '@backstage/core-components';\nimport { configApiRef, errorApiRef, useApi } from '@backstage/core-plugin-api';\nimport { scoreToColorConverter } from '../../helpers/scoreToColorConverter';\nimport { getWarningPanel } from '../../helpers/getWarningPanel';\nimport {\n  getScoreTableEntries,\n  EntityScoreTableEntry,\n} from './helpers/getScoreTableEntries';\nimport { areaColumn } from './columns/areaColumn';\nimport { detailsColumn } from './columns/detailsColumn';\nimport { scorePercentColumn } from './columns/scorePercentColumn';\nimport { titleColumn } from './columns/titleColumn';\nimport { getReviewerLink } from './sub-components/getReviewerLink';\nimport { scoringDataApiRef } from '../../api';\n\n// lets prepare some styles\nconst useStyles = makeStyles(theme => ({\n  badgeLabel: {\n    color: theme.palette.common.white,\n  },\n  header: {\n    padding: theme.spacing(2, 2, 2, 2.5),\n  },\n  action: {\n    margin: 0,\n  },\n  disabled: {\n    backgroundColor: theme.palette.background.default,\n  },\n}));\n\n// data loader\nconst useScoringDataLoader = () => {\n  const errorApi = useApi(errorApiRef);\n  const scorigDataApi = useApi(scoringDataApiRef);\n  const config = useApi(configApiRef);\n  const { entity } = useEntity();\n\n  const { error, value, loading } = useAsync(\n    async () => scorigDataApi.getScore(entity),\n    [scorigDataApi, entity],\n  );\n\n  useEffect(() => {\n    if (error) {\n      errorApi.post(error);\n    }\n  }, [error, errorApi]);\n\n  const wikiLinkTemplate =\n    config.getOptionalString('scorecards.wikiLinkTemplate') ??\n    '';\n\n  return { loading, value, wikiLinkTemplate, error };\n};\n\nexport const ScoreCard = ({\n  variant = 'gridItem',\n}: {\n  entity?: Entity;\n  variant?: InfoCardVariants;\n}) => {\n  // let's load the entity data from url defined in config etc\n  const {\n    loading,\n    error,\n    value: data,\n    wikiLinkTemplate,\n  } = useScoringDataLoader();\n\n  const classes = useStyles();\n\n  // let's prepare the \"chip\" used in the up-right card corner\n  let gateLabel = 'Not computed';\n  const gateStyle = {\n    margin: 0,\n    backgroundColor: scoreToColorConverter(data?.scoreSuccess).background,\n    color: scoreToColorConverter(data?.scoreSuccess).foreground,\n  };\n  if (data?.scorePercent || data?.scorePercent === 0) {\n    const label = data?.scoreLabel ?? `${data.scorePercent} %`;\n    gateLabel = `Total score: ${label}`;\n  }\n  const qualityBadge = !loading && <Chip label={gateLabel} style={gateStyle} />;\n\n  // let's define the main table columns\n  const columns: TableColumn<EntityScoreTableEntry>[] = [\n    areaColumn(data),\n    titleColumn(wikiLinkTemplate),\n    detailsColumn,\n    scorePercentColumn,\n  ];\n\n  const allEntries = getScoreTableEntries(data);\n\n  return (\n    <InfoCard\n      title=\"Scoring\"\n      variant={variant}\n      headerProps={{\n        action: qualityBadge,\n        classes: {\n          root: classes.header,\n          action: classes.action,\n        },\n      }}\n    >\n      {loading && <Progress />}\n\n      {error && getWarningPanel(error)}\n\n      {!loading && !data && (\n        <div data-testid=\"score-card-no-data\">\n          <EmptyState\n            missing=\"info\"\n            title=\"No information to display\"\n            description=\"There is no data available for this entity\"\n          />\n        </div>\n      )}\n\n      {!loading && data && (\n        <div data-testid=\"score-card\">\n          <Grid\n            item\n            container\n            direction=\"column\"\n            justifyContent=\"space-between\"\n            alignItems=\"stretch\"\n            style={{ height: '100%' }}\n            spacing={0}\n          >\n            <Table<EntityScoreTableEntry>\n              title=\"Score of each requirement\"\n              options={{\n                search: true,\n                paging: false,\n                grouping: true,\n                padding: 'dense',\n              }}\n              columns={columns}\n              data={allEntries}\n              components={{\n                Groupbar: () => null, // we do not want to display possibility to change grouping\n              }}\n            />\n\n            {getReviewerLink(data)}\n          </Grid>\n        </div>\n      )}\n    </InfoCard>\n  );\n};\n"],"names":[],"mappings":"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"}